# GitHub Actions
# SPDX-License-Identifier: Apache-2.0
# Copyright (c) Siemens Mobility GmbH, 2021

name: CI

on: push

jobs:
  make:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: build-make
        run: |
          # would need access to azure.archive.ubuntu.com:
          # sudo apt-get update
          # sudo apt-get install -y >/dev/null libssl-dev build-essential # not needed
          make -f Makefile_v1 build_all
          mkdir -p doc/html # workaround for not using doxygen here
          DESTDIR=tmp make -f Makefile_v1 install
          DESTDIR=tmp make -f Makefile_v1 uninstall

  cmake:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: build-cmake
        run: |
          #sudo apt-get update
          #sudo apt-get install -y >/dev/null cmake # build-essential git libssl-dev
          mkdir build
          cd build
          SECUTILS_NO_TLS=1 cmake -S .. -B .
          cmake --build .
          SECUTILS_USE_ICV=1 cmake -DCMAKE_BUILD_TYPE=Release -S .. -B .
          make clean build
          DESTDIR=tmp make install uninstall
          make deb

  make-with-uta:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: build-with-uta
        run: |
          sudo apt-get update
          sudo apt-get install -y >/dev/null dh-autoreconf debhelper # rsync libssl-dev git pkg-config
          mkdir dependencies
          cd dependencies
          git clone https://github.com/siemens/libuta.git
          cd libuta 
          ./bootstrap
          ./debian/configure sim
          dpkg-buildpackage -uc -us
          cd ..
          sudo dpkg -i libuta-sim_1.*
          sudo dpkg -i libuta-dev_1.*
          cd ..
          export SECUTILS_USE_UTA=1
          make -f Makefile_v1 build_all

  deb:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: build-debian
        run: |
          sudo apt-get update
          sudo apt-get install -y >/dev/null debhelper devscripts # rsync libssl-dev git pkg-config
          echo "copying everything to subdirectory 'debian-packaging'"
          mkdir -p debian-packaging
          rsync -av --exclude='debian-packaging' . debian-packaging/
          cd debian-packaging
          unset SECUTILS_USE_UTA
          export SECUTILS_USE_ICV=1
          dpkg-buildpackage -uc -us

  doc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: doc
        run: |
          sudo apt-get update
          sudo apt-get install -y >/dev/null doxygen graphviz # build-essential
          make -f Makefile_v1 doc
  
  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: coverage
        run: |
          # sudo apt-get update
          # sudo apt-get install -y >/dev/null # libssl-dev build-essential doxygen graphviz
          make -f Makefile_v1 coverage
